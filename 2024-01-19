#include <iostream>
#include <string>
#include <vector>

using namespace std;

vector<int> divisor(int N) {
    vector<int> d;

    for (int i = 1; i * i <= N; i++) {
        if (N % i == 0) {
            d.push_back(i);
            if (i != N / i) {
                d.push_back(N / i);
            }
        }
    }
    return d;
}

int solution(int number, int limit, int power) {
    int answer = 0;
    vector<int> divisors[number + 1];
    
    for (int i = 1; i <= number; i++) {
        divisors[i] = divisor(i);
    }

    for (int i = 1; i <= number; i++) {
        int s = divisors[i].size();
        if (s > limit) {
            answer += power;
        } else {
            answer += s;
        }
    }
    return answer;
}




//10번부터 실행시간 초과...였던
#include <string>
#include <vector>

using namespace std;

vector<int> divisor(int N) {
    vector<int> d;
    
    for (int i = 1; i <= N; i++) {
        if (N % i == 0) {
            d.push_back(i);
        }
    }
    return d;
}

int solution(int number, int limit, int power) {
    int answer = 0;
    
    for (int i = 1; i < number+1; i++) {
        int s = divisor(i).size();
        if (s > limit) {
            answer += power;
        } else {
            answer += s;
        }
    }
    return answer;
}
